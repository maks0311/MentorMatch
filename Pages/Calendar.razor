@page "/calendar"

@using System
@using System.Text
@using System.Reflection
@using Dapper;
@using System.Data.SqlClient;
@using Radzen;
@using Radzen.Blazor;
@using Microsoft.Extensions.Configuration;
@using System.Globalization;
@using Blazored.SessionStorage;
@using Mentor.Data;

@inject IConfiguration AppConfig
@inject ISessionStorageService SessionStorage
@inject IPermissionService PermissionService;

@inject TooltipService TooltipService
@inject NavigationManager NavigationManager
@inject NotificationService NotificationService
@inject DialogService DialogService

@inject IUserService UserService
@inject ILessonService LessonService
@inject ILessonStatusService LessonStatusService
@inject IAvailabilityService AvailabilityService
@inject IRatingService RatingService
@inject ISubjectService SubjectService
@inject ILevelService LevelService
@inject ICompetenceService CompetenceService


@if (AppState.IsNull())
{
    <p>Loading menu...</p>
}
else
{
    <TopMenu @ref=@Menu AppState="@AppState" IsRendered="@IsRendered"></TopMenu>
}

@if ((AppState.UserInfo.IsNotNull()) && (AppState.UserInfo.IsAuthenticated.IsTrue()))
{
    <RadzenRow Style="margin-top:60px">
        <RadzenColumn Size="12">
            <RadzenTabs RenderMode="TabRenderMode.Client" Style="height: max-content">
                <Tabs>
                    <RadzenTabsItem Text="Calendar">
                        <RadzenScheduler @ref=@Scheduler
                                         Style="height:650px"
                                         TItem="LessonModel"
                                         Data=@LessonEnum
                                         StartProperty="DATE_START"
                                         EndProperty="DATE_STOP"
                                         TextProperty=@(UserObject.IsTutor ? "CAPTION_FOR_TUTOR" : "CAPTION_FOR_STUDENT")
                                         SelectedIndex="1"
                                         SlotRender=@OnSlotRender
                                         AppointmentSelect=@OnLessonSelect
                                         AppointmentMouseEnter="@(args => ShowTooltip(args.Element, args.Data.LESSON_STATUS_NAME))"
                                         AppointmentRender=@OnLessonRender>
                            <RadzenMonthView MaxAppointmentsInSlot="1" />
                            <RadzenWeekView MinutesPerSlot="15" TimeFormat="HH:mm" />
                            <RadzenDayView MinutesPerSlot="15" TimeFormat="HH:mm" />
                        </RadzenScheduler>
                    </RadzenTabsItem>

                    <RadzenTabsItem Text="Availability" Visible="@(AppState.UserInfo.IsStudent.IsFalse())">
                        <RadzenCard Style="width:inherit; margin-bottom:10px">
                            <RadzenRow>
                                <RadzenColumn Size="8">
                                    <RadzenRadioButtonList Value=@AvMode TValue="int" Change=@(args => AvMode = args) Style="margin-top:10px">
                                        <Items>
                                            <RadzenRadioButtonListItem Text="Set Single Term" Value="1" />
                                            <RadzenRadioButtonListItem Text="Set Recuring Terms" Value="2" />
                                        </Items>
                                    </RadzenRadioButtonList>
                                </RadzenColumn>
                                <RadzenColumn Size="4" Style="text-align:end">
                                    <RadzenButton Text="Add" ButtonStyle="ButtonStyle.Secondary" Disabled="@AvailablityCreateDisabled" Style="margin-right:5px" Size="ButtonSize.Medium" Icon="add" Click="@(args => CreateDailyAvailability(AvailabilityMode.SET_AVAILABLE))"></RadzenButton>
                                    <RadzenButton Text="Remove" ButtonStyle="ButtonStyle.Danger" Disabled="@AvailablityRemoveDisabled" Size="ButtonSize.Medium" Icon="delete" Click="@(args => CreateDailyAvailability(AvailabilityMode.SET_NOT_AVAILABLE))"></RadzenButton>
                                </RadzenColumn>
                            </RadzenRow>
                        </RadzenCard>

                        @* SINGLE *@
                        <RadzenCard Style="width:inherit; margin-bottom:10px" Visible="@(AvMode == 1)">
                            <RadzenRow>
                                <RadzenColumn Size="2"><RadzenLabel>Select Date</RadzenLabel></RadzenColumn>
                                <RadzenColumn Size="2"><RadzenLabel>Begining Time</RadzenLabel></RadzenColumn>
                                <RadzenColumn Size="2"><RadzenLabel>End Time</RadzenLabel></RadzenColumn>
                                <RadzenColumn Size="6"></RadzenColumn>
                            </RadzenRow>
                            <RadzenRow>
                                <RadzenColumn Size="2">
                                    <RadzenDatePicker TValue="DateTime"
                                                      @bind-Value=@Term.SelectedDay
                                                      Style="width:inherit"
                                                      DateFormat="yyyy-MM-dd" />
                                </RadzenColumn>
                                <RadzenColumn Size="2">
                                    <RadzenDropDown @bind-Value=@Term.TimeStart
                                                    TValue="TimeOnly"
                                                    AllowClear="false"
                                                    Data=@QuarterOnlyList
                                                    Style="width:inherit"
                                                    Change=@(args => OnDayDropDownChange("TIME_START")) />
                                </RadzenColumn>
                                <RadzenColumn Size="2">
                                    <RadzenDropDown @bind-Value=@Term.TimeStop
                                                    TValue="TimeOnly"
                                                    AllowClear="false"
                                                    Data=@QuarterOnlyList
                                                    Style="width:inherit"
                                                    Change=@(args => OnDayDropDownChange("TIME_STOP")) />
                                </RadzenColumn>
                                <RadzenColumn Size="6">
                                    <RadzenLabel Text="@("Duration (hh:mm): " + Term.Duration)" Style="margin-top:7px; margin-left:10px"></RadzenLabel>
                                </RadzenColumn>
                            </RadzenRow>
                        </RadzenCard>

                        @* RECURING *@
                        <RadzenCard Style="width:inherit; margin-bottom:10px" Visible="@(AvMode == 2)">
                            <RadzenRow>
                                <RadzenColumn Size="2"><RadzenLabel>Begining Date</RadzenLabel></RadzenColumn>
                                <RadzenColumn Size="2"><RadzenLabel>End Date</RadzenLabel></RadzenColumn>
                                <RadzenColumn Size="8"></RadzenColumn>
                            </RadzenRow>
                            <RadzenRow>
                                <RadzenColumn Size="2">
                                    <RadzenDatePicker TValue="DateTime"
                                                      @bind-Value=@DailySlotList.DateStart
                                                      DateFormat="yyyy-MM-dd"
                                                      Style="width:inherit"
                                                      Change=@(args => OnDayDropDownChange("DATE_RECURING_START")) />
                                </RadzenColumn>
                                <RadzenColumn Size="2">
                                    <RadzenDatePicker TValue="DateTime"
                                                      @bind-Value=@DailySlotList.DateStop
                                                      DateFormat="yyyy-MM-dd"
                                                      Style="width:inherit"
                                                      Change=@(args => OnDayDropDownChange("DATE_RECURING_STOP")) />
                                </RadzenColumn>
                                <RadzenColumn Size="8">
                                    <RadzenLabel Text="@("Duration (days): " + DailySlotList.DurationDays)" Style="margin-top:7px; margin-left:10px"></RadzenLabel>
                                </RadzenColumn>
                            </RadzenRow>
                        </RadzenCard>

                        <RadzenCard Style="width:inherit; margin-bottom:10px" Visible="@(AvMode == 2)">
                            <RadzenRow>
                                <RadzenColumn Size="1"></RadzenColumn>
                                <RadzenColumn Size="2"><RadzenLabel>Begining Time</RadzenLabel></RadzenColumn>
                                <RadzenColumn Size="2"><RadzenLabel>End Time</RadzenLabel></RadzenColumn>
                                <RadzenColumn Size="7"><RadzenLabel Style="margin-left:10px">Duration (hh:mm)</RadzenLabel></RadzenColumn>
                            </RadzenRow>

                            @foreach (var item in DailySlotList.Items)
                            {
                                <RadzenRow Style="width:inherit; margin-bottom:10px">
                                    <RadzenColumn Size="1">
                                        <RadzenLabel Text="@item.WeekdayName"></RadzenLabel>
                                    </RadzenColumn>
                                    <RadzenColumn Size="2">
                                        <RadzenDropDown @bind-Value=@DailySlotList.Items[item.Weekday - 1].TimeStart
                                                        TValue="TimeOnly"
                                                        AllowClear="false"
                                                        Style="width:inherit"
                                                        Data=@QuarterOnlyList
                                                        Change=@(args => OnWeekDropDownChange("TIME_RECURING_START", @item.Weekday)) />
                                    </RadzenColumn>
                                    <RadzenColumn Size="2">
                                        <RadzenDropDown @bind-Value=@DailySlotList.Items[item.Weekday - 1].TimeStop
                                                        TValue="TimeOnly"
                                                        AllowClear="false"
                                                        Style="width:inherit"
                                                        Data=@QuarterOnlyList
                                                        Change=@(args => OnWeekDropDownChange("TIME_RECURING_STOP", @item.Weekday)) />
                                    </RadzenColumn>
                                    <RadzenColumn Size="7">
                                        <RadzenLabel Text="@DailySlotList.Items[item.Weekday - 1].Duration" Style="margin-top:7px; margin-left:10px"></RadzenLabel>
                                    </RadzenColumn>
                                </RadzenRow>
                            }

                        </RadzenCard>
                    </RadzenTabsItem>
                </Tabs>
            </RadzenTabs>
        </RadzenColumn>
    </RadzenRow>
}
/****** Object:  StoredProcedure [dbo].[SYS_COMPETENCE_CREATE]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SYS_COMPETENCE_CREATE]  
	@ID INT OUTPUT,
	@TUTOR_ID INT,
	@SUBJECT_ID INT,
	@LEVEL_ID INT,
	@DESCRIPTION NVARCHAR(500)
AS  
BEGIN
    
	IF NOT EXISTS(SELECT 1 FROM dbo.[SYS_COMPETENCE] WHERE [TUTOR_ID] = @TUTOR_ID AND [SUBJECT_ID] = @SUBJECT_ID AND [LEVEL_ID] = @LEVEL_ID) 
	BEGIN
	    INSERT INTO dbo.[SYS_COMPETENCE] 
	    (
			[TUTOR_ID],
			[SUBJECT_ID],
			[LEVEL_ID],
		    [DESCRIPTION]
	    )  
	    VALUES 
	    (
			@TUTOR_ID,
			@SUBJECT_ID,
			@LEVEL_ID,
		    @DESCRIPTION
	    );

		SELECT @ID = CAST(IDENT_CURRENT( 'SYS_COMPETENCE' ) AS INT);

	END
END

GO
/****** Object:  StoredProcedure [dbo].[SYS_COMPETENCE_DELETE]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SYS_COMPETENCE_DELETE]  
	@ID INT
AS  
BEGIN
    
	DELETE FROM dbo.[SYS_COMPETENCE] 
	WHERE [ID] = @ID;

END

GO
/****** Object:  StoredProcedure [dbo].[SYS_COMPETENCE_SELECT_ALL_BY_TUTOR]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SYS_COMPETENCE_SELECT_ALL_BY_TUTOR]  
    @TUTOR_ID INT
AS  
BEGIN
    
	SELECT 
	    T1.*,
		T2.SUBJECT_NAME,
		T3.LEVEL_NAME
	FROM
		dbo.[SYS_COMPETENCE] T1,
		dbo.[SYS_SUBJECT] T2,
		dbo.[SYS_LEVEL] T3
	WHERE 1=1 
		AND T1.SUBJECT_ID = T2.SUBJECT_ID
		AND T1.LEVEL_ID = T3.LEVEL_ID
		AND T1.[TUTOR_ID] = @TUTOR_ID;

END

GO
/****** Object:  StoredProcedure [dbo].[SYS_GROUP_SELECT_ALL]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SYS_GROUP_SELECT_ALL] 
AS 
BEGIN
SET NOCOUNT ON

	SELECT *
	FROM
		dbo.[SYS_GROUP] T1
	ORDER BY
		T1.[GROUP_NAME] ASC;		

END
GO
/****** Object:  StoredProcedure [dbo].[SYS_LEVEL_SELECT_ALL]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SYS_LEVEL_SELECT_ALL] 
AS 
BEGIN
SET NOCOUNT ON

	SELECT *
	FROM
		dbo.[SYS_LEVEL] T1
	ORDER BY
		T1.[LEVEL_NAME] ASC;		

END
GO
/****** Object:  StoredProcedure [dbo].[SYS_PERMISSION_CREATE]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SYS_PERMISSION_CREATE]  
    @GROUP_ID INT,  
    @ELEMENT_ID INT
AS  
BEGIN
    
	IF NOT EXISTS(SELECT 1 FROM dbo.[SYS_PERMISSION] WHERE [GROUP_ID] = @GROUP_ID AND [ELEMENT_ID] = @ELEMENT_ID) 
	BEGIN
	    INSERT INTO dbo.[SYS_PERMISSION] 
	    (
		    [GROUP_ID],
		    [ELEMENT_ID]
	    )  
	    VALUES 
	    (
		    @GROUP_ID,
		    @ELEMENT_ID
	    );
	END
END

GO
/****** Object:  StoredProcedure [dbo].[SYS_PERMISSION_SELECT]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SYS_PERMISSION_SELECT]  
	@GROUP_ID INT
AS  
BEGIN
	    
	SELECT 
		T1.[ELEMENT_ID],
		T1.[ELEMENT_NAME],
		T1.[DESCRIPTION],
		T2.[ID],
		T2.[GROUP_ID],  
		CASE 
			WHEN (T2.GROUP_ID = @GROUP_ID) THEN 1
			ELSE 0
		END AS [IS_SELECTED]
	FROM dbo.[SYS_ELEMENT] T1
		LEFT OUTER JOIN dbo.[SYS_PERMISSION] T2
		ON T1.[ELEMENT_ID] = T2.ELEMENT_ID
		AND T2.[GROUP_ID] = @GROUP_ID;

END

GO
/****** Object:  StoredProcedure [dbo].[SYS_PERMISSION_UPDATE]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SYS_PERMISSION_UPDATE]  
	@GROUP_ID INT,  
	@ELEMENT_ID INT,
	@IS_SELECTED BIT
AS  
BEGIN
    
BEGIN TRANSACTION
BEGIN TRY

	IF EXISTS (SELECT 1 FROM [SYS_PERMISSION] WHERE [GROUP_ID] = @GROUP_ID AND [ELEMENT_ID] = @ELEMENT_ID)
	BEGIN
		IF(@IS_SELECTED = 1)
		BEGIN
		UPDATE [SYS_PERMISSION] SET
			[GROUP_ID] = @GROUP_ID		
		WHERE 
			[GROUP_ID] = @GROUP_ID
			AND [ELEMENT_ID] = @ELEMENT_ID;
		END
		ELSE
		BEGIN
		DELETE FROM [SYS_PERMISSION]
		WHERE 
			[GROUP_ID] = @GROUP_ID
			AND [ELEMENT_ID] = @ELEMENT_ID;
		END
	END
	ELSE
	BEGIN
		IF(@IS_SELECTED = 1)
		BEGIN
			INSERT INTO SYS_PERMISSION
			(
				[GROUP_ID],
				[ELEMENT_ID]
			)
			VALUES
			(
				@GROUP_ID, 
				@ELEMENT_ID
			);
		END
		ELSE
		BEGIN
			DECLARE @tab TABLE (col INT);
			INSERT INTO @tab (col) values (0);
		END
	END

END TRY
BEGIN CATCH
    SELECT 
        ERROR_NUMBER() AS ErrorNumber
        ,ERROR_SEVERITY() AS ErrorSeverity
        ,ERROR_STATE() AS ErrorState
        ,ERROR_PROCEDURE() AS ErrorProcedure
        ,ERROR_LINE() AS ErrorLine
        ,ERROR_MESSAGE() AS ErrorMessage;

    IF (@@TRANCOUNT > 0)
        ROLLBACK TRANSACTION;
END CATCH;

IF (@@TRANCOUNT > 0) COMMIT TRANSACTION;

END

GO
/****** Object:  StoredProcedure [dbo].[SYS_SUBJECT_SELECT_ALL]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SYS_SUBJECT_SELECT_ALL] 
AS 
BEGIN
SET NOCOUNT ON

	SELECT *
	FROM
		dbo.[SYS_SUBJECT] T1
	ORDER BY
		T1.[SUBJECT_NAME] ASC;		

END
GO
/****** Object:  StoredProcedure [dbo].[SYS_TUTOR_RATING_SELECT]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SYS_TUTOR_RATING_SELECT] 
	@TUTOR_ID INT,
	@RATNG_VALUE FLOAT OUT
AS
BEGIN
	
	SET @RATNG_VALUE = 0;

	IF EXISTS(SELECT 1 FROM dbo.[SYS_USER_TO_RATING] WHERE [TUTOR_ID] = @TUTOR_ID)
	BEGIN
		SELECT 
			@RATNG_VALUE = AVG(T2.[RATING_VALUE])
		FROM
			dbo.[SYS_USER_TO_RATING] T1,
			dbo.[SYS_RATING] T2
		WHERE 1=1
			AND T1.[RATING_ID] = T2.[RATING_ID]
			AND T1.[TUTOR_ID] = @TUTOR_ID;
	END

END
GO
/****** Object:  StoredProcedure [dbo].[SYS_USER_AUTHENTICATE]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SYS_USER_AUTHENTICATE] 
	@USER_EMAIL NVARCHAR(50),
	@USER_PASS NVARCHAR(50)
AS 
BEGIN
SET NOCOUNT ON

	IF NOT EXISTS (SELECT * FROM dbo.[SYS_USER] WHERE (UPPER([USER_EMAIL]) = UPPER(@USER_EMAIL)))
	BEGIN
		--USER DOES NOT EXIST
		SELECT -1;
	END
	ELSE
	BEGIN
		--USER EXISTS
		DECLARE @USER_ID INT;
		DECLARE @IS_ACTIVE INT;
		DECLARE @PASS NVARCHAR(50);

		SELECT TOP 1
			@USER_ID = [USER_ID],
			@PASS = [USER_PASS],
			@IS_ACTIVE = [IS_ACTIVE]
		FROM dbo.[SYS_USER] 
		WHERE (UPPER([USER_EMAIL]) = UPPER(@USER_EMAIL));
		
		
		IF(@USER_PASS = @PASS)
		BEGIN
			--PASSWORD IS CORRECT
			IF (@IS_ACTIVE = 1)
			BEGIN
				SELECT @USER_ID;
			END
			ELSE
				SELECT -2;
		END
		ELSE
		BEGIN
			--PASSWORD IS INCORRECT
			SELECT 0;
		END
	END
END
GO
/****** Object:  StoredProcedure [dbo].[SYS_USER_CREATE]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SYS_USER_CREATE] 
	@USER_ID INT OUTPUT, 
	@USER_FULLNAME NVARCHAR(100), 
	@USER_NICKNAME NVARCHAR(50), 
	@USER_EMAIL NVARCHAR(50),
	@USER_PHONE NVARCHAR(50),
	@IS_ACTIVE BIT = 1,
	@USER_DESCRIPTION NVARCHAR(250),
	@GROUP_ID INT,
	@WORK_TYPE_ID INT
AS 
BEGIN

	BEGIN TRANSACTION
	BEGIN TRY			
		IF NOT EXISTS (SELECT 1 FROM dbo.[SYS_USER] WHERE ([USER_EMAIL] = @USER_EMAIL))				
		BEGIN
			INSERT INTO dbo.[SYS_USER] 
			(
				[USER_FULLNAME], 
				[USER_NICKNAME], 
				[USER_PASS],
				[USER_EMAIL],
				[USER_PHONE],
				[IS_ACTIVE],
				[USER_DESCRIPTION],
				[GROUP_ID],
				[WORK_TYPE_ID]
			) 
			VALUES 
			(
				@USER_FULLNAME, 
				@USER_NICKNAME, 
				'',
				@USER_EMAIL,
				@USER_PHONE,
				@IS_ACTIVE,
				@USER_DESCRIPTION,
				@GROUP_ID,
				@WORK_TYPE_ID
			);

			SELECT @USER_ID = CAST(IDENT_CURRENT( 'SYS_USER' ) AS INT);
		END
		ELSE
		BEGIN
			-- USER EXISTS
			SELECT @USER_ID = 0;
		END

		COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		SET @USER_ID = -1;
		ROLLBACK TRANSACTION
	END CATCH 

END
GO
/****** Object:  StoredProcedure [dbo].[SYS_USER_DELETE]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SYS_USER_DELETE] 
	@USER_ID INT
AS 
BEGIN

	DELETE FROM dbo.[SYS_USER] 
	WHERE [USER_ID] = @USER_ID

END
GO
/****** Object:  StoredProcedure [dbo].[SYS_USER_PASSWORD_UPDATE]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SYS_USER_PASSWORD_UPDATE] 
	@USER_ID INT,
	@USER_PASS NVARCHAR(50)
AS 
BEGIN

	UPDATE dbo.[SYS_USER] SET
		[USER_PASS] = @USER_PASS
	WHERE
		[USER_ID] = @USER_ID;

END
GO
/****** Object:  StoredProcedure [dbo].[SYS_USER_SELECT]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SYS_USER_SELECT] 
	@USER_ID INT
AS 
BEGIN
SET NOCOUNT ON

	SELECT 
		T1.[USER_ID], 
		T1.[USER_FULLNAME], 
		T1.[USER_NICKNAME], 
		'' AS [USER_PASS],
		T1.[USER_EMAIL],
		T1.[USER_PHONE],
		T1.[IS_ACTIVE],
		T1.[USER_DESCRIPTION],
		T1.[GROUP_ID],
		T1.[WORK_TYPE_ID]
	FROM
		dbo.[SYS_USER] T1,
		dbo.[SYS_GROUP] T2
	WHERE
		T1.GROUP_ID = T2.GROUP_ID
		AND T1.[USER_ID] = @USER_ID

END
GO
/****** Object:  StoredProcedure [dbo].[SYS_USER_SELECT_ALL]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SYS_USER_SELECT_ALL] 
AS 
BEGIN
SET NOCOUNT ON

	SELECT 
		T1.[USER_ID],
		T1.[USER_FULLNAME], 
		T1.[USER_NICKNAME], 
		'' AS [USER_PASS],
		T1.[USER_EMAIL],
		T1.[USER_PHONE],
		T1.[IS_ACTIVE],
		T1.[USER_DESCRIPTION],
		T1.[GROUP_ID],
		T1.[WORK_TYPE_ID]
	FROM
		dbo.[SYS_USER] T1
	ORDER BY
		T1.[USER_NICKNAME] ASC;		

END
GO
/****** Object:  StoredProcedure [dbo].[SYS_USER_SELECT_BY_EMAIL]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SYS_USER_SELECT_BY_EMAIL]  
    @USER_EMAIL NVARCHAR(50)
AS  
BEGIN
    
	SELECT 
	    T1.*,
	    T2.GROUP_NAME
	FROM
		dbo.[SYS_USER] T1,
		dbo.[SYS_GROUP] T2
	WHERE 1=1
		AND T1.GROUP_ID = T2.GROUP_ID
		AND (UPPER(T1.[USER_EMAIL]) = UPPER(@USER_EMAIL))

END

GO
/****** Object:  StoredProcedure [dbo].[SYS_USER_UPDATE]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SYS_USER_UPDATE] 
	@USER_ID INT OUTPUT, 
	@USER_FULLNAME NVARCHAR(100), 
	@USER_NICKNAME NVARCHAR(50), 
	@USER_EMAIL NVARCHAR(50),
	@USER_PHONE NVARCHAR(50),
	@IS_ACTIVE BIT = 1,
	@USER_DESCRIPTION NVARCHAR(250),
	@GROUP_ID INT,
	@WORK_TYPE_ID INT
AS 
BEGIN

	BEGIN TRANSACTION
	BEGIN TRY			
		IF NOT EXISTS (SELECT 1 FROM dbo.[SYS_USER] WHERE ([USER_EMAIL] = @USER_EMAIL) AND [USER_ID] <> @USER_ID)					
		BEGIN
			UPDATE dbo.[SYS_USER]
			SET
				[USER_FULLNAME] = @USER_FULLNAME,
				[USER_NICKNAME] = @USER_NICKNAME,
				[USER_EMAIL] = @USER_EMAIL,
				[USER_PHONE] = @USER_PHONE,
				[IS_ACTIVE] = @IS_ACTIVE,
				[USER_DESCRIPTION] = @USER_DESCRIPTION,
				[GROUP_ID] = @GROUP_ID,
				[WORK_TYPE_ID] = @WORK_TYPE_ID
			WHERE
				[USER_ID] = @USER_ID;
		END
		COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION
	END CATCH
	
END
GO
/****** Object:  StoredProcedure [dbo].[SYS_WORK_TYPE_SELECT_ALL]    Script Date: 2023-06-21 01:02:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SYS_WORK_TYPE_SELECT_ALL] 
AS 
BEGIN
SET NOCOUNT ON

	SELECT *
	FROM
		dbo.[SYS_WORK_TYPE] T1
	ORDER BY
		T1.[WORK_TYPE_NAME] ASC;		

END
GO

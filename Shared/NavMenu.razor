@inherits LayoutComponentBase

@using System
@using System.Text
@using System.Reflection
@using Dapper;
@using System.Data.SqlClient;
@using Radzen;
@using Radzen.Blazor;
@using Radzen.Blazor.Rendering;
@using Microsoft.Extensions.Configuration;
@using System.Globalization;
@using Microsoft.Extensions.Logging;
@using Microsoft.Extensions.Logging.EventLog;
@using Blazored.SessionStorage;
@using Mentor.Data;
@using System.Threading

@inject IJSRuntime JS

@inject IConfiguration AppConfig
@inject ISessionStorageService SessionStorage
@inject IPermissionService PermissionService;

@inject TooltipService TooltipService
@inject NavigationManager NavigationManager
@inject NotificationService NotificationService
@inject DialogService DialogService


<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Mentor</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<RadzenPanelMenu Click="@(args => OnMenuItemClick(args))" Style="background-color: hsla(0, 0%, 0%, 0)">
    @if (AppState != null)
    {
        <RadzenPanelMenuItem Text="Home" Icon="home" Match="NavLinkMatch.All"></RadzenPanelMenuItem>
        <RadzenPanelMenuItem Text="Search" Icon="search" Match="NavLinkMatch.All"></RadzenPanelMenuItem>
        <RadzenPanelMenuItem Text="My Calendar" Icon="date_range" Match="NavLinkMatch.All" Style="white-space:nowrap;"></RadzenPanelMenuItem>

        <RadzenLink Path="@manual_url" Target="_blank" Style="color:white;">
            <RadzenPanelMenuItem Text="Manual" Icon="chrome_reader_mode" Match="NavLinkMatch.All"></RadzenPanelMenuItem>
        </RadzenLink>

        <RadzenPanelMenuItem Text="About" Icon="help_outline" Match="NavLinkMatch.All"></RadzenPanelMenuItem>
    }
</RadzenPanelMenu>


@code {
    [Parameter]
    public AppState AppState { get; set; } = new AppState();
    [Parameter]
    public bool IsRendered { get; set; } = false;
    string msg { get; set; }
    string Today { get { return DateTime.Now.ToString("D", new CultureInfo("en-EN")); } }
    private string AppVersion { get; set; }
    private static NLog.ILogger AppLogger = NLog.LogManager.GetCurrentClassLogger();
    private bool collapseNavMenu = true;
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private string manual_url = "/manual/manual.pdf";

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void OnMenuItemClick(Radzen.MenuItemEventArgs args)
    {
        if (args.Text == "Home")
        {
            NavigationManager.NavigateTo("/");
        }

        if (args.Text == "Search")
        {
            NavigationManager.NavigateTo("/search");
        }

        if (args.Text == "My Calendar")
        {
            NavigationManager.NavigateTo("/calendar");
        }

        if (args.Text == "Manual")
        {
            //NavigationManager.NavigateTo(manual_url);
        }

        if (args.Text == "About")
        {
            NavigationManager.NavigateTo("/about");
        }
    }
}
